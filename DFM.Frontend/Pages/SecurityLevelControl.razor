@page "/pages/security"
@inject IHttpService httpService
@inject AccessTokenStorage accessToken
@inject ServiceEndpoint endpoint
@inject LocalStorageHelper storageHelper
@inject IMinioService minio
@inject StorageConfiguration storageConf
@inject NavigationManager nav
@inject ISnackbar Snackbar
@implements IDisposable



<DFM.Frontend.Pages.Common.ButtonPanel FormMode="formMode" ShowTerminateButton="false" ShowCreateButton="true" ShowDeleteButton="true"
                                       ShowEditButton="true" ShowSaveButton="true" ShowSendButton="false" Behavior="BehaviorStatus.ReadWrite"
                                       CreateButtonEvent="onCreateButtonClick" PreviousButtonEvent="onePreviousButtonClick"
                                       DeleteButtonEvent="onDeleteButtonClick" RootBreadcrumb="ລາຍການລະດັບຄວາມປອດໄພ" ViewBreadcrumb="ເບີ່ງລະດັບຄວາມປອດໄພ"
                                       EditBreadcrumb="ແກ້ໄຂລະດັບຄວາມປອດໄພ" CreateBreadcrumb="ສ້າງລະດັບຄວາມປອດໄພ" OnProcessing="onProcessing"
                                       EditButtonEvent="onEditButtonClick" SaveButtonEvent="onSaveClickAsync"></DFM.Frontend.Pages.Common.ButtonPanel>


<MudContainer Class="mt-2">
    <MudGrid>
        <MudItem xs="12" sm="12">
            <MudPaper Elevation="3">

                @if (formMode == FormMode.List)
                {
                    <DFM.Frontend.Pages.SecurityLevelComponent.SecurityList OnRowClick="onRowClick" RoleId="@roleId" OnTabChangeEvent="onTabChangeEvent"></DFM.Frontend.Pages.SecurityLevelComponent.SecurityList>
                }
                else if (formMode == FormMode.Create)
                {
                    <DFM.Frontend.Pages.SecurityLevelComponent.SecurityForm DocumentSecurityModel="documentSecurityModel" OnProcessing="onProcessing" RoleId="@roleId"></DFM.Frontend.Pages.SecurityLevelComponent.SecurityForm>
                }
                else if (formMode == FormMode.Edit)
                {
                    <DFM.Frontend.Pages.SecurityLevelComponent.SecurityForm DocumentSecurityModel="documentSecurityModel" OnProcessing="onProcessing" RoleId="@roleId"></DFM.Frontend.Pages.SecurityLevelComponent.SecurityForm>

                }
                else if (formMode == FormMode.View)
                {
                    <DFM.Frontend.Pages.SecurityLevelComponent.SecurityView DocumentSecurityModel="documentSecurityModel" RoleId="@roleId"></DFM.Frontend.Pages.SecurityLevelComponent.SecurityView>
                }
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>




<MudMessageBox @ref="delBox" Title="ລຶບເອກະສານ">
    <MessageContent>
        <h2>ທ່ານຕ້ອງການ ລຶບລະດັບຄວາມປອດໄພ ນີ້ແທ້ບໍ່?</h2>
    </MessageContent>
    <YesButton>
        <MudButton Variant="Variant.Filled" Color="Color.Error" StartIcon="@Icons.Material.Filled.Delete">ຢືນຢັນ</MudButton>
    </YesButton>
</MudMessageBox>

@code {


    DocumentSecurityModel documentSecurityModel = new();
    private FormMode formMode;
    string? roleId = "";
    MudMessageBox? delBox { get; set; }
    bool onProcessing = false;
    public void Dispose()
    {
    }
}
