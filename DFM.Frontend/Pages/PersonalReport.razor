@page "/pages/report/{Link}"
@inject IHttpService httpService
@inject AccessTokenStorage accessToken
@inject ServiceEndpoint endpoint
@inject LocalStorageHelper storageHelper
@inject IMinioService minio
@inject StorageConfiguration storageConf
@inject NavigationManager nav
@inject ISnackbar Snackbar
@inject EnvConf envConf
@implements IDisposable

<PageTitle>Report - @envConf.PageTitle</PageTitle>

<MudContainer Class="mt-2">
    <MudGrid>
        <MudItem xs="12" sm="12">
            <MudPaper Elevation="3">
                <MudContainer>
                    <MudGrid>
                        <MudItem xs="12" md="6">
                            <MudButtonGroup Color="Color.Primary" Variant="Variant.Outlined">

                                @if (isDrillDown == ReportDrillDownEnum.List)
                                {
                                    <MudButton StartIcon="@Icons.Material.Filled.ArrowBack" OnClick="onPrevoiusToSearch">@previousBtn</MudButton>
                                    <MudButton Disabled="true">@current</MudButton>
                                }
                                else if (isDrillDown == ReportDrillDownEnum.Detail)
                                {
                                    <MudButton StartIcon="@Icons.Material.Filled.ArrowBack" OnClick="onPrevoiusToList">@previousBtn</MudButton>
                                    <MudButton Disabled="true">@current</MudButton>
                                }
                                else
                                {
                                    <MudButton Disabled="true">@current</MudButton>

                                }
                            </MudButtonGroup>
                        </MudItem>
                    </MudGrid>
                </MudContainer>

                @if (Link == "inbound")
                {
                    if (isDrillDown == ReportDrillDownEnum.List)
                    {
                        <DFM.Frontend.Pages.ReportComponent.ReportView Link="@Link" RoleId="@itemClick.RoleID"
                                                                       TraceStatus="itemClick.TraceStatus" OnRowClick="onRowClick"></DFM.Frontend.Pages.ReportComponent.ReportView>
                    }
                    else if (isDrillDown == ReportDrillDownEnum.Search)
                    {
                        <DFM.Frontend.Pages.ReportComponent.ReportList InboxType="InboxType.Inbound" NotifyMessage="notifyMessage"
                                                                       OnSearch="onSearch" RoleIDs="roleIds" ReportSummary="reportSummary"
                                                                       OnProcessing="onProcessing" OnReportItemClick="onItemReportClick"></DFM.Frontend.Pages.ReportComponent.ReportList>
                    }
                    else if (isDrillDown == ReportDrillDownEnum.Detail)
                    {
                        <DFM.Frontend.Pages.Inbound.DocumentView RoleId="@roleId" OnProcessing="onProcessing" RawDocument="rawDocument"
                                                                 DocumentModel="documentModel"></DFM.Frontend.Pages.Inbound.DocumentView>
                    }

                }
                else if (Link == "outbound")
                {
                    if (isDrillDown == ReportDrillDownEnum.List)
                    {
                        <DFM.Frontend.Pages.ReportComponent.ReportView Link="@Link" RoleId="@itemClick.RoleID"
                                                                       TraceStatus="itemClick.TraceStatus" OnRowClick="onRowClick"></DFM.Frontend.Pages.ReportComponent.ReportView>
                    }
                    else if (isDrillDown == ReportDrillDownEnum.Search)
                    {
                        <DFM.Frontend.Pages.ReportComponent.ReportList InboxType="InboxType.Outbound" NotifyMessage="notifyMessage"
                                                                       OnSearch="onSearch" RoleIDs="roleIds" ReportSummary="reportSummary"
                                                                       OnProcessing="onProcessing" OnReportItemClick="onItemReportClick"></DFM.Frontend.Pages.ReportComponent.ReportList>
                    }
                    else if (isDrillDown == ReportDrillDownEnum.Detail)
                    {
                        <DFM.Frontend.Pages.Outbound.DocumentView RoleId="@roleId" OnProcessing="onProcessing" RawDocument="rawDocument"
                                                                  DocumentModel="documentModel"></DFM.Frontend.Pages.Outbound.DocumentView>
                    }

                }
                else
                {
                    <MudAlert Severity="Severity.Error">Sorry the content not found, invalid link or page</MudAlert>
                }

            </MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>



@code {
    [Parameter] public string? Link { get; set; }

    List<string> roleIds = new();
    private GetPersonalReportRequest? searchRequest = new();
    bool onProcessing;
    string? roleId;
    DocumentModel? documentModel = new();
    RawDocumentData? rawDocument = new();
    public void Dispose()
    {
    }
}
