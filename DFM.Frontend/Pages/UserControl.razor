@page "/pages/org/user"
@inject IHttpService httpService
@inject AccessTokenStorage accessToken
@inject ServiceEndpoint endpoint
@inject LocalStorageHelper storageHelper
@inject ISnackbar Snackbar
@inject IMinioService minio
@inject EnvConf envConf
@inject NavigationManager nav
@inject TokenState tokenState
@implements IDisposable

<PageTitle>User Management - @envConf.PageTitle</PageTitle>

<DFM.Frontend.Pages.Common.ButtonPanel FormMode="formMode" ShowTerminateButton="false" ShowCreateButton="true" ShowDeleteButton="true"
                                       ShowEditButton="true" ShowSaveButton="true" ShowSendButton="false" ShowHistoryButton="false" ShowRestoreButton="false"
                                       CreateButtonEvent="onCreateButtonClick" PreviousButtonEvent="onePreviousButtonClick" OnProcessing="onProcessing"
                                       DeleteButtonEvent="onDeleteButtonClick" RootBreadcrumb="ລາຍການຜູ້ໃຊ້ລະບົບ" ViewBreadcrumb="ເບີ່ງຂໍ້ມູນຜູ້ໃຊ້ລະບົບ"
                                       EditBreadcrumb="ແກ້ໄຂຂໍ້ມູນຜູ້ໃຊ້ລະບົບ" CreateBreadcrumb="ສ້າງຂໍ້ມູນຜູ້ໃຊ້ລະບົບໃຫມ່"
                                       EditButtonEvent="onEditButtonClick" SaveButtonEvent="onSaveClickAsync"></DFM.Frontend.Pages.Common.ButtonPanel>



<MudContainer Class="mt-2">
    <MudGrid>
        <MudItem xs="12" sm="12">
            <MudPaper Elevation="3">
                @if (formMode == FormMode.List)
                {
                    <DFM.Frontend.Pages.UserComponent.UserListView RoleId="@roleId" OnRowClick="@onRowClick"></DFM.Frontend.Pages.UserComponent.UserListView>
                }
                else if (formMode == FormMode.Create || formMode == FormMode.Edit)
                {
                    <DFM.Frontend.Pages.UserComponent.UserForm Mode="formMode" Employee="employeeModel" 
                    OnProcessing="onProcessing" Notify="notify" ProfileImage="attachment"
                    OpenResetPasswordBox="openResetPasswordBox"></DFM.Frontend.Pages.UserComponent.UserForm>
                }
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>

<MudMessageBox @ref="delBox" Title="ລຶບຂໍ້ມູນຜູ້ໃຊ້">
    <MessageContent>
        <h2>ທ່ານຕ້ອງການ ລຶບຂໍ້ມູນຜູ້ໃຊ້ ນີ້ແທ້ບໍ່?</h2>
    </MessageContent>
    <YesButton>
        <MudButton Variant="Variant.Filled" Color="Color.Error" StartIcon="@Icons.Material.Filled.Delete">ຢືນຢັນ</MudButton>
    </YesButton>
</MudMessageBox>

<MudMessageBox @ref="mbox" Title="ປ່ຽນລະຫັດຜ່ານ" style="width:300px">
    <MessageContent>
        <MudGrid xs="12" md="12">
            <MudItem>
                <MudTextField Margin="Margin.Dense" Disabled="onProcessing" @bind-Value="employeeModel!.Password" InputType="InputType.Password" Required="true" T="string" Counter="12" MaxLength="12" Immediate="true" Variant="Variant.Outlined" Validation="@(new Func<string, IEnumerable<string>>(PasswordCharacters))" HelperText="ລະຫັດຜ່ານ" Label="Password" />
            </MudItem>
        </MudGrid>

    </MessageContent>
    <YesButton>
        <MudButton Disabled="onProcessing" Variant="Variant.Filled" Color="Color.Success" StartIcon="@Icons.Material.Filled.CheckCircle">ຢືນຢັນ</MudButton>
    </YesButton>
</MudMessageBox>

@code {
    private FormMode formMode;
    string? roleId = "";
    MudMessageBox? delBox { get; set; }
    EmployeeModel? employeeModel = new();
    bool onProcessing = false;
    bool notify = false;
    private AttachmentDto? attachment = new();
    MudMessageBox? mbox { get; set; }
    private CancellationTokenSource cts = new CancellationTokenSource();
    public void Dispose()
    {
        cts.Cancel();
        cts.Dispose();
    }
}
